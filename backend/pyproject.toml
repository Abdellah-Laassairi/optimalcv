[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "optimalcv"
version = "1.0.0"
description = "AI-powered CV generator with multi-stage optimization for ATS-friendly resumes"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
keywords = ["cv", "resume", "ai", "latex", "ats", "job-application", "career", "optimal"]
authors = [
    {name = "OptimalCV Team", email = "team@optimalcv.app"}
]
maintainers = [
    {name = "OptimalCV Team", email = "team@optimalcv.app"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business",
    "Topic :: Text Processing :: Markup :: LaTeX",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Framework :: FastAPI",
]

dependencies = [
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.23.0",
    "pydantic>=2.0.0",
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    "pypdf>=3.15.0",
    "python-multipart>=0.0.6",
    "python-dotenv>=1.0.0",
    "markdown>=3.4.0",
    "loguru>=0.7.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.5.0",
    "httpx>=0.24.1",
    "pre-commit>=3.6.0",
    "bandit>=1.7.5",
    "autoflake>=2.2.0",
    "pyupgrade>=3.15.0",
    "pydocstyle>=6.3.0",
    "flake8-docstrings>=1.7.0",
    "flake8-bugbear>=23.0.0",
    "flake8-comprehensions>=3.14.0",
    "flake8-simplify>=0.21.0",
    "detect-secrets>=1.4.0",
    "types-requests>=2.31.0",
    "types-PyYAML>=6.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.5.0",
    "mkdocstrings[python]>=0.24.0",
    "mkdocs-minify-plugin>=0.8.0",
    "mkdocs-git-revision-date-localized-plugin>=1.2.0",
    "pymdown-extensions>=10.7",
]
all = [
    "optimalcv[dev,docs]",
]

[project.urls]
Homepage = "https://github.com/abdellah/optimalcv"
Documentation = "https://abdellah.github.io/optimalcv"
Repository = "https://github.com/abdellah/optimalcv"
"Bug Tracker" = "https://github.com/abdellah/optimalcv/issues"
Changelog = "https://github.com/abdellah/optimalcv/blob/main/CHANGELOG.md"

[project.scripts]
optimalcv = "app.main:cli"
optimalcv-server = "app.main:run_server"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.hatch.build.targets.wheel.force-include]
"app/resources" = "app/resources"

[tool.hatch.build.targets.sdist]
include = [
    "/app",
    "/requirements.txt",
    "/README.md",
    "/LICENSE",
]

[tool.hatch.version]
path = "app/__init__.py"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.envs.default]
dependencies = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.5.0",
    "httpx>=0.24.1",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args}"
test-cov = "pytest --cov=app --cov-report=term-missing --cov-report=html {args}"
lint = "flake8 app"
format = "black app && isort app"
type-check = "mypy app"
all = ["format", "lint", "type-check", "test-cov"]

[tool.hatch.envs.docs]
dependencies = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.2.0",
    "mkdocstrings[python]>=0.23.0",
]

[tool.hatch.envs.docs.scripts]
build = "mkdocs build"
serve = "mkdocs serve"

[tool.black]
line-length = 120
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=app --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
pythonpath = ["."]

[tool.coverage.run]
source = ["app"]
omit = ["*/tests/*", "*/__pycache__/*", "*/site-packages/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]
